[2021-05-17 03:10:28,125] {taskinstance.py:877} INFO - Dependencies all met for <TaskInstance: etl.run_spark_job 2021-05-17T05:00:00+00:00 [queued]>
[2021-05-17 03:10:28,131] {taskinstance.py:877} INFO - Dependencies all met for <TaskInstance: etl.run_spark_job 2021-05-17T05:00:00+00:00 [queued]>
[2021-05-17 03:10:28,131] {taskinstance.py:1068} INFO - 
--------------------------------------------------------------------------------
[2021-05-17 03:10:28,131] {taskinstance.py:1069} INFO - Starting attempt 1 of 1
[2021-05-17 03:10:28,131] {taskinstance.py:1070} INFO - 
--------------------------------------------------------------------------------
[2021-05-17 03:10:28,136] {taskinstance.py:1089} INFO - Executing <Task(DockerOperator): run_spark_job> on 2021-05-17T05:00:00+00:00
[2021-05-17 03:10:28,139] {standard_task_runner.py:52} INFO - Started process 33730 to run task
[2021-05-17 03:10:28,145] {standard_task_runner.py:76} INFO - Running: ['airflow', 'tasks', 'run', 'etl', 'run_spark_job', '2021-05-17T05:00:00+00:00', '--job-id', '888', '--pool', 'default_pool', '--raw', '--subdir', 'DAGS_FOLDER/etl_dag.py', '--cfg-path', '/var/folders/_f/vg3x3jmj23bcz6s88l7v6fb40000gn/T/tmp4k380l6d', '--error-file', '/var/folders/_f/vg3x3jmj23bcz6s88l7v6fb40000gn/T/tmpk3um7cen']
[2021-05-17 03:10:28,146] {standard_task_runner.py:77} INFO - Job 888: Subtask run_spark_job
[2021-05-17 03:10:28,182] {logging_mixin.py:104} INFO - Running <TaskInstance: etl.run_spark_job 2021-05-17T05:00:00+00:00 [running]> on host 27.2.168.192.in-addr.arpa
[2021-05-17 03:10:28,209] {taskinstance.py:1283} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=udacity
AIRFLOW_CTX_DAG_ID=etl
AIRFLOW_CTX_TASK_ID=run_spark_job
AIRFLOW_CTX_EXECUTION_DATE=2021-05-17T05:00:00+00:00
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2021-05-17T05:00:00+00:00
[2021-05-17 03:10:28,211] {docker.py:303} INFO - Pulling docker image raphacarvalho/udac_spark
[2021-05-17 03:10:31,007] {docker.py:317} INFO - latest: Pulling from raphacarvalho/udac_spark
[2021-05-17 03:10:31,009] {docker.py:312} INFO - Digest: sha256:4e46a1dd36dff0cd54870612109ad855e6261637c4ee65f5dbc48a05c92675ea
[2021-05-17 03:10:31,010] {docker.py:312} INFO - Status: Image is up to date for raphacarvalho/udac_spark
[2021-05-17 03:10:31,013] {docker.py:232} INFO - Starting docker container from image raphacarvalho/udac_spark
[2021-05-17 03:10:32,965] {docker.py:276} INFO - WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.spark.unsafe.Platform (file:/usr/local/spark-3.1.1-bin-hadoop3.2/jars/spark-unsafe_2.12-3.1.1.jar) to constructor java.nio.DirectByteBuffer(long,int)
WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[2021-05-17 03:10:33,552] {docker.py:276} INFO - 21/05/17 06:10:33 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2021-05-17 03:10:35,782] {docker.py:276} INFO - Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties
[2021-05-17 03:10:35,798] {docker.py:276} INFO - 21/05/17 06:10:35 INFO SparkContext: Running Spark version 3.1.1
[2021-05-17 03:10:35,877] {docker.py:276} INFO - 21/05/17 06:10:35 INFO ResourceUtils: ==============================================================
[2021-05-17 03:10:35,877] {docker.py:276} INFO - 21/05/17 06:10:35 INFO ResourceUtils: No custom resources configured for spark.driver.
[2021-05-17 03:10:35,878] {docker.py:276} INFO - 21/05/17 06:10:35 INFO ResourceUtils: ==============================================================
[2021-05-17 03:10:35,879] {docker.py:276} INFO - 21/05/17 06:10:35 INFO SparkContext: Submitted application: spark.py
[2021-05-17 03:10:35,919] {docker.py:276} INFO - 21/05/17 06:10:35 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(memoryOverhead -> name: memoryOverhead, amount: 884, script: , vendor: , cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 4096, script: , vendor: , offHeap -> name: offHeap, amount: 500, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
[2021-05-17 03:10:35,937] {docker.py:276} INFO - 21/05/17 06:10:35 INFO ResourceProfile: Limiting resource is cpu
[2021-05-17 03:10:35,938] {docker.py:276} INFO - 21/05/17 06:10:35 INFO ResourceProfileManager: Added ResourceProfile id: 0
[2021-05-17 03:10:36,020] {docker.py:276} INFO - 21/05/17 06:10:36 INFO SecurityManager: Changing view acls to: jovyan
21/05/17 06:10:36 INFO SecurityManager: Changing modify acls to: jovyan
[2021-05-17 03:10:36,021] {docker.py:276} INFO - 21/05/17 06:10:36 INFO SecurityManager: Changing view acls groups to:
[2021-05-17 03:10:36,021] {docker.py:276} INFO - 21/05/17 06:10:36 INFO SecurityManager: Changing modify acls groups to: 
21/05/17 06:10:36 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(jovyan); groups with view permissions: Set(); users  with modify permissions: Set(jovyan); groups with modify permissions: Set()
[2021-05-17 03:10:36,436] {docker.py:276} INFO - 21/05/17 06:10:36 INFO Utils: Successfully started service 'sparkDriver' on port 41559.
[2021-05-17 03:10:36,485] {docker.py:276} INFO - 21/05/17 06:10:36 INFO SparkEnv: Registering MapOutputTracker
[2021-05-17 03:10:36,541] {docker.py:276} INFO - 21/05/17 06:10:36 INFO SparkEnv: Registering BlockManagerMaster
[2021-05-17 03:10:36,585] {docker.py:276} INFO - 21/05/17 06:10:36 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
[2021-05-17 03:10:36,586] {docker.py:276} INFO - 21/05/17 06:10:36 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
[2021-05-17 03:10:36,594] {docker.py:276} INFO - 21/05/17 06:10:36 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
[2021-05-17 03:10:36,614] {docker.py:276} INFO - 21/05/17 06:10:36 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-c5ebe07a-8c5b-431c-8ab9-0a487c0d3bde
[2021-05-17 03:10:36,648] {docker.py:276} INFO - 21/05/17 06:10:36 INFO MemoryStore: MemoryStore started with capacity 934.4 MiB
[2021-05-17 03:10:36,675] {docker.py:276} INFO - 21/05/17 06:10:36 INFO SparkEnv: Registering OutputCommitCoordinator
[2021-05-17 03:10:37,016] {docker.py:276} INFO - 21/05/17 06:10:37 INFO Utils: Successfully started service 'SparkUI' on port 4040.
[2021-05-17 03:10:37,115] {docker.py:276} INFO - 21/05/17 06:10:37 INFO SparkUI: Bound SparkUI to 0.0.0.0, and started at http://fb991e38a3b1:4040
[2021-05-17 03:10:37,415] {docker.py:276} INFO - 21/05/17 06:10:37 INFO Executor: Starting executor ID driver on host fb991e38a3b1
[2021-05-17 03:10:37,465] {docker.py:276} INFO - 21/05/17 06:10:37 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 35871.
21/05/17 06:10:37 INFO NettyBlockTransferService: Server created on fb991e38a3b1:35871
[2021-05-17 03:10:37,469] {docker.py:276} INFO - 21/05/17 06:10:37 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
[2021-05-17 03:10:37,483] {docker.py:276} INFO - 21/05/17 06:10:37 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, fb991e38a3b1, 35871, None)
[2021-05-17 03:10:37,494] {docker.py:276} INFO - 21/05/17 06:10:37 INFO BlockManagerMasterEndpoint: Registering block manager fb991e38a3b1:35871 with 934.4 MiB RAM, BlockManagerId(driver, fb991e38a3b1, 35871, None)
[2021-05-17 03:10:37,498] {docker.py:276} INFO - 21/05/17 06:10:37 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, fb991e38a3b1, 35871, None)
[2021-05-17 03:10:37,500] {docker.py:276} INFO - 21/05/17 06:10:37 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, fb991e38a3b1, 35871, None)
[2021-05-17 03:10:38,190] {docker.py:276} INFO - 21/05/17 06:10:38 INFO SharedState: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir ('file:/home/jovyan/spark-warehouse').
[2021-05-17 03:10:38,191] {docker.py:276} INFO - 21/05/17 06:10:38 INFO SharedState: Warehouse path is 'file:/home/jovyan/spark-warehouse'.
[2021-05-17 03:10:39,537] {docker.py:276} INFO - 21/05/17 06:10:39 WARN MetricsConfig: Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties
[2021-05-17 03:10:39,596] {docker.py:276} INFO - 21/05/17 06:10:39 INFO MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
[2021-05-17 03:10:39,597] {docker.py:276} INFO - 21/05/17 06:10:39 INFO MetricsSystemImpl: s3a-file-system metrics system started
[2021-05-17 03:10:50,851] {docker.py:276} INFO - 21/05/17 06:10:50 INFO InMemoryFileIndex: It took 5126 ms to list leaf files for 27 paths.
[2021-05-17 03:10:56,630] {docker.py:276} INFO - 21/05/17 06:10:56 INFO InMemoryFileIndex: It took 5683 ms to list leaf files for 27 paths.
[2021-05-17 03:10:59,253] {docker.py:276} INFO - 21/05/17 06:10:59 INFO FileSourceStrategy: Pushed Filters:
[2021-05-17 03:10:59,258] {docker.py:276} INFO - 21/05/17 06:10:59 INFO FileSourceStrategy: Post-Scan Filters: (length(trim(value#0, None)) > 0)
[2021-05-17 03:10:59,264] {docker.py:276} INFO - 21/05/17 06:10:59 INFO FileSourceStrategy: Output Data Schema: struct<value: string>
[2021-05-17 03:11:00,070] {docker.py:276} INFO - 21/05/17 06:11:00 INFO CodeGenerator: Code generated in 263.6994 ms
[2021-05-17 03:11:00,140] {docker.py:276} INFO - 21/05/17 06:11:00 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 177.6 KiB, free 934.2 MiB)
[2021-05-17 03:11:00,237] {docker.py:276} INFO - 21/05/17 06:11:00 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 28.2 KiB, free 934.2 MiB)
[2021-05-17 03:11:00,241] {docker.py:276} INFO - 21/05/17 06:11:00 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on fb991e38a3b1:35871 (size: 28.2 KiB, free: 934.4 MiB)
[2021-05-17 03:11:00,247] {docker.py:276} INFO - 21/05/17 06:11:00 INFO SparkContext: Created broadcast 0 from csv at NativeMethodAccessorImpl.java:0
[2021-05-17 03:11:00,274] {docker.py:276} INFO - 21/05/17 06:11:00 INFO FileSourceScanExec: Planning scan with bin packing, max size: 28954488 bytes, open cost is considered as scanning 4194304 bytes.
[2021-05-17 03:11:00,442] {docker.py:276} INFO - 21/05/17 06:11:00 INFO SparkContext: Starting job: csv at NativeMethodAccessorImpl.java:0
[2021-05-17 03:11:00,464] {docker.py:276} INFO - 21/05/17 06:11:00 INFO DAGScheduler: Got job 0 (csv at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2021-05-17 03:11:00,465] {docker.py:276} INFO - 21/05/17 06:11:00 INFO DAGScheduler: Final stage: ResultStage 0 (csv at NativeMethodAccessorImpl.java:0)
[2021-05-17 03:11:00,466] {docker.py:276} INFO - 21/05/17 06:11:00 INFO DAGScheduler: Parents of final stage: List()
[2021-05-17 03:11:00,468] {docker.py:276} INFO - 21/05/17 06:11:00 INFO DAGScheduler: Missing parents: List()
[2021-05-17 03:11:00,474] {docker.py:276} INFO - 21/05/17 06:11:00 INFO DAGScheduler: Submitting ResultStage 0 (MapPartitionsRDD[3] at csv at NativeMethodAccessorImpl.java:0), which has no missing parents
[2021-05-17 03:11:00,580] {docker.py:276} INFO - 21/05/17 06:11:00 INFO MemoryStore: Block broadcast_1 stored as values in memory (estimated size 10.8 KiB, free 934.2 MiB)
[2021-05-17 03:11:00,598] {docker.py:276} INFO - 21/05/17 06:11:00 INFO MemoryStore: Block broadcast_1_piece0 stored as bytes in memory (estimated size 5.4 KiB, free 934.2 MiB)
[2021-05-17 03:11:00,599] {docker.py:276} INFO - 21/05/17 06:11:00 INFO BlockManagerInfo: Added broadcast_1_piece0 in memory on fb991e38a3b1:35871 (size: 5.4 KiB, free: 934.4 MiB)
[2021-05-17 03:11:00,603] {docker.py:276} INFO - 21/05/17 06:11:00 INFO SparkContext: Created broadcast 1 from broadcast at DAGScheduler.scala:1383
[2021-05-17 03:11:00,620] {docker.py:276} INFO - 21/05/17 06:11:00 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 0 (MapPartitionsRDD[3] at csv at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2021-05-17 03:11:00,622] {docker.py:276} INFO - 21/05/17 06:11:00 INFO TaskSchedulerImpl: Adding task set 0.0 with 1 tasks resource profile 0
[2021-05-17 03:11:00,702] {docker.py:276} INFO - 21/05/17 06:11:00 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0) (fb991e38a3b1, executor driver, partition 0, PROCESS_LOCAL, 5565 bytes) taskResourceAssignments Map()
[2021-05-17 03:11:00,722] {docker.py:276} INFO - 21/05/17 06:11:00 INFO Executor: Running task 0.0 in stage 0.0 (TID 0)
[2021-05-17 03:11:00,898] {docker.py:276} INFO - 21/05/17 06:11:00 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621226414_to_1621228214.csv, range: 0-104299, partition values: [empty row]
[2021-05-17 03:11:00,931] {docker.py:276} INFO - 21/05/17 06:11:00 INFO CodeGenerator: Code generated in 23.4864 ms
[2021-05-17 03:11:01,511] {docker.py:276} INFO - 21/05/17 06:11:01 INFO Executor: Finished task 0.0 in stage 0.0 (TID 0). 1607 bytes result sent to driver
[2021-05-17 03:11:01,525] {docker.py:276} INFO - 21/05/17 06:11:01 INFO TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 834 ms on fb991e38a3b1 (executor driver) (1/1)
[2021-05-17 03:11:01,529] {docker.py:276} INFO - 21/05/17 06:11:01 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool
[2021-05-17 03:11:01,538] {docker.py:276} INFO - 21/05/17 06:11:01 INFO DAGScheduler: ResultStage 0 (csv at NativeMethodAccessorImpl.java:0) finished in 1.042 s
[2021-05-17 03:11:01,546] {docker.py:276} INFO - 21/05/17 06:11:01 INFO DAGScheduler: Job 0 is finished. Cancelling potential speculative or zombie tasks for this job
[2021-05-17 03:11:01,546] {docker.py:276} INFO - 21/05/17 06:11:01 INFO TaskSchedulerImpl: Killing all running tasks in stage 0: Stage finished
[2021-05-17 03:11:01,551] {docker.py:276} INFO - 21/05/17 06:11:01 INFO DAGScheduler: Job 0 finished: csv at NativeMethodAccessorImpl.java:0, took 1.109304 s
[2021-05-17 03:11:01,600] {docker.py:276} INFO - 21/05/17 06:11:01 INFO CodeGenerator: Code generated in 30.4855 ms
[2021-05-17 03:11:01,635] {docker.py:276} INFO - 21/05/17 06:11:01 INFO BlockManagerInfo: Removed broadcast_1_piece0 on fb991e38a3b1:35871 in memory (size: 5.4 KiB, free: 934.4 MiB)
[2021-05-17 03:11:01,685] {docker.py:276} INFO - 21/05/17 06:11:01 INFO FileSourceStrategy: Pushed Filters:
[2021-05-17 03:11:01,685] {docker.py:276} INFO - 21/05/17 06:11:01 INFO FileSourceStrategy: Post-Scan Filters:
[2021-05-17 03:11:01,686] {docker.py:276} INFO - 21/05/17 06:11:01 INFO FileSourceStrategy: Output Data Schema: struct<value: string>
[2021-05-17 03:11:01,694] {docker.py:276} INFO - 21/05/17 06:11:01 INFO MemoryStore: Block broadcast_2 stored as values in memory (estimated size 177.6 KiB, free 934.0 MiB)
[2021-05-17 03:11:01,714] {docker.py:276} INFO - 21/05/17 06:11:01 INFO MemoryStore: Block broadcast_2_piece0 stored as bytes in memory (estimated size 28.2 KiB, free 934.0 MiB)
[2021-05-17 03:11:01,716] {docker.py:276} INFO - 21/05/17 06:11:01 INFO BlockManagerInfo: Added broadcast_2_piece0 in memory on fb991e38a3b1:35871 (size: 28.2 KiB, free: 934.3 MiB)
[2021-05-17 03:11:01,725] {docker.py:276} INFO - 21/05/17 06:11:01 INFO SparkContext: Created broadcast 2 from csv at NativeMethodAccessorImpl.java:0
[2021-05-17 03:11:01,731] {docker.py:276} INFO - 21/05/17 06:11:01 INFO FileSourceScanExec: Planning scan with bin packing, max size: 28954488 bytes, open cost is considered as scanning 4194304 bytes.
[2021-05-17 03:11:01,781] {docker.py:276} INFO - 21/05/17 06:11:01 INFO BlockManagerInfo: Removed broadcast_0_piece0 on fb991e38a3b1:35871 in memory (size: 28.2 KiB, free: 934.4 MiB)
[2021-05-17 03:11:02,626] {docker.py:276} INFO - 21/05/17 06:11:02 INFO FileSourceStrategy: Pushed Filters:
[2021-05-17 03:11:02,627] {docker.py:276} INFO - 21/05/17 06:11:02 INFO FileSourceStrategy: Post-Scan Filters:
[2021-05-17 03:11:02,627] {docker.py:276} INFO - 21/05/17 06:11:02 INFO FileSourceStrategy: Output Data Schema: struct<ts: string, n: string, bid: string, ask: string, value: string ... 7 more fields>
[2021-05-17 03:11:04,182] {docker.py:276} INFO - 21/05/17 06:11:04 INFO FileOutputCommitter: File Output Committer Algorithm version is 1
21/05/17 06:11:04 INFO FileOutputCommitter: FileOutputCommitter skip cleanup _temporary folders under output directory:false, ignore cleanup failures: false
[2021-05-17 03:11:04,187] {docker.py:276} INFO - 21/05/17 06:11:04 INFO AbstractS3ACommitterFactory: Using committer partitioned to output data to s3a://udac-forex-project/consolidated_data
[2021-05-17 03:11:04,187] {docker.py:276} INFO - 21/05/17 06:11:04 INFO AbstractS3ACommitterFactory: Using Commmitter PartitionedStagingCommitter{StagingCommitter{AbstractS3ACommitter{role=Task committer attempt_202105170611047015042444317197751_0000_m_000000_0, name=partitioned, outputPath=s3a://udac-forex-project/consolidated_data, workPath=file:/tmp/hadoop-jovyan/s3a/61e9ceda-83c2-4d73-b501-1099d374a96d/_temporary/0/_temporary/attempt_202105170611047015042444317197751_0000_m_000000_0}, conflictResolution=REPLACE, wrappedCommitter=FileOutputCommitter{PathOutputCommitter{context=TaskAttemptContextImpl{JobContextImpl{jobId=job_202105170611047015042444317197751_0000}; taskId=attempt_202105170611047015042444317197751_0000_m_000000_0, status=''}; org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter@13157f9e}; outputPath=file:/home/jovyan/tmp/staging/jovyan/61e9ceda-83c2-4d73-b501-1099d374a96d/staging-uploads, workPath=null, algorithmVersion=1, skipCleanup=false, ignoreCleanupFailures=false}}} for s3a://udac-forex-project/consolidated_data
[2021-05-17 03:11:04,189] {docker.py:276} INFO - 21/05/17 06:11:04 INFO SQLHadoopMapReduceCommitProtocol: Using output committer class org.apache.hadoop.fs.s3a.commit.staging.PartitionedStagingCommitter
[2021-05-17 03:11:04,255] {docker.py:276} INFO - 21/05/17 06:11:04 INFO HashAggregateExec: spark.sql.codegen.aggregate.map.twolevel.enabled is set to true, but current version of codegened fast hashmap does not support this aggregate.
[2021-05-17 03:11:04,323] {docker.py:276} INFO - 21/05/17 06:11:04 INFO BlockManagerInfo: Removed broadcast_2_piece0 on fb991e38a3b1:35871 in memory (size: 28.2 KiB, free: 934.4 MiB)
[2021-05-17 03:11:04,401] {docker.py:276} INFO - 21/05/17 06:11:04 INFO CodeGenerator: Code generated in 87.7916 ms
[2021-05-17 03:11:04,404] {docker.py:276} INFO - 21/05/17 06:11:04 INFO HashAggregateExec: spark.sql.codegen.aggregate.map.twolevel.enabled is set to true, but current version of codegened fast hashmap does not support this aggregate.
[2021-05-17 03:11:04,466] {docker.py:276} INFO - 21/05/17 06:11:04 INFO CodeGenerator: Code generated in 51.3525 ms
[2021-05-17 03:11:04,472] {docker.py:276} INFO - 21/05/17 06:11:04 INFO MemoryStore: Block broadcast_3 stored as values in memory (estimated size 177.5 KiB, free 934.2 MiB)
[2021-05-17 03:11:04,491] {docker.py:276} INFO - 21/05/17 06:11:04 INFO MemoryStore: Block broadcast_3_piece0 stored as bytes in memory (estimated size 28.2 KiB, free 934.2 MiB)
[2021-05-17 03:11:04,493] {docker.py:276} INFO - 21/05/17 06:11:04 INFO BlockManagerInfo: Added broadcast_3_piece0 in memory on fb991e38a3b1:35871 (size: 28.2 KiB, free: 934.4 MiB)
[2021-05-17 03:11:04,495] {docker.py:276} INFO - 21/05/17 06:11:04 INFO SparkContext: Created broadcast 3 from csv at NativeMethodAccessorImpl.java:0
[2021-05-17 03:11:04,503] {docker.py:276} INFO - 21/05/17 06:11:04 INFO FileSourceScanExec: Planning scan with bin packing, max size: 28954488 bytes, open cost is considered as scanning 4194304 bytes.
[2021-05-17 03:11:04,661] {docker.py:276} INFO - 21/05/17 06:11:04 INFO SparkContext: Starting job: csv at NativeMethodAccessorImpl.java:0
[2021-05-17 03:11:04,667] {docker.py:276} INFO - 21/05/17 06:11:04 INFO DAGScheduler: Registering RDD 13 (csv at NativeMethodAccessorImpl.java:0) as input to shuffle 0
[2021-05-17 03:11:04,671] {docker.py:276} INFO - 21/05/17 06:11:04 INFO DAGScheduler: Got job 1 (csv at NativeMethodAccessorImpl.java:0) with 200 output partitions
21/05/17 06:11:04 INFO DAGScheduler: Final stage: ResultStage 2 (csv at NativeMethodAccessorImpl.java:0)
21/05/17 06:11:04 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 1)
[2021-05-17 03:11:04,674] {docker.py:276} INFO - 21/05/17 06:11:04 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 1)
[2021-05-17 03:11:04,677] {docker.py:276} INFO - 21/05/17 06:11:04 INFO DAGScheduler: Submitting ShuffleMapStage 1 (MapPartitionsRDD[13] at csv at NativeMethodAccessorImpl.java:0), which has no missing parents
[2021-05-17 03:11:04,697] {docker.py:276} INFO - 21/05/17 06:11:04 INFO MemoryStore: Block broadcast_4 stored as values in memory (estimated size 28.0 KiB, free 934.2 MiB)
[2021-05-17 03:11:04,709] {docker.py:276} INFO - 21/05/17 06:11:04 INFO MemoryStore: Block broadcast_4_piece0 stored as bytes in memory (estimated size 12.0 KiB, free 934.2 MiB)
[2021-05-17 03:11:04,710] {docker.py:276} INFO - 21/05/17 06:11:04 INFO BlockManagerInfo: Added broadcast_4_piece0 in memory on fb991e38a3b1:35871 (size: 12.0 KiB, free: 934.4 MiB)
[2021-05-17 03:11:04,712] {docker.py:276} INFO - 21/05/17 06:11:04 INFO SparkContext: Created broadcast 4 from broadcast at DAGScheduler.scala:1383
[2021-05-17 03:11:04,715] {docker.py:276} INFO - 21/05/17 06:11:04 INFO DAGScheduler: Submitting 4 missing tasks from ShuffleMapStage 1 (MapPartitionsRDD[13] at csv at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0, 1, 2, 3))
[2021-05-17 03:11:04,716] {docker.py:276} INFO - 21/05/17 06:11:04 INFO TaskSchedulerImpl: Adding task set 1.0 with 4 tasks resource profile 0
[2021-05-17 03:11:04,720] {docker.py:276} INFO - 21/05/17 06:11:04 INFO TaskSetManager: Starting task 0.0 in stage 1.0 (TID 1) (fb991e38a3b1, executor driver, partition 0, PROCESS_LOCAL, 5554 bytes) taskResourceAssignments Map()
[2021-05-17 03:11:04,720] {docker.py:276} INFO - 21/05/17 06:11:04 INFO TaskSetManager: Starting task 1.0 in stage 1.0 (TID 2) (fb991e38a3b1, executor driver, partition 1, PROCESS_LOCAL, 5554 bytes) taskResourceAssignments Map()
[2021-05-17 03:11:04,721] {docker.py:276} INFO - 21/05/17 06:11:04 INFO TaskSetManager: Starting task 2.0 in stage 1.0 (TID 3) (fb991e38a3b1, executor driver, partition 2, PROCESS_LOCAL, 5554 bytes) taskResourceAssignments Map()
[2021-05-17 03:11:04,722] {docker.py:276} INFO - 21/05/17 06:11:04 INFO TaskSetManager: Starting task 3.0 in stage 1.0 (TID 4) (fb991e38a3b1, executor driver, partition 3, PROCESS_LOCAL, 5444 bytes) taskResourceAssignments Map()
[2021-05-17 03:11:04,723] {docker.py:276} INFO - 21/05/17 06:11:04 INFO Executor: Running task 0.0 in stage 1.0 (TID 1)
[2021-05-17 03:11:04,744] {docker.py:276} INFO - 21/05/17 06:11:04 INFO Executor: Running task 1.0 in stage 1.0 (TID 2)
[2021-05-17 03:11:04,754] {docker.py:276} INFO - 21/05/17 06:11:04 INFO Executor: Running task 2.0 in stage 1.0 (TID 3)
[2021-05-17 03:11:04,756] {docker.py:276} INFO - 21/05/17 06:11:04 INFO Executor: Running task 3.0 in stage 1.0 (TID 4)
[2021-05-17 03:11:04,905] {docker.py:276} INFO - 21/05/17 06:11:04 INFO CodeGenerator: Code generated in 61.897 ms
[2021-05-17 03:11:04,959] {docker.py:276} INFO - 21/05/17 06:11:04 INFO CodeGenerator: Code generated in 16.2955 ms
[2021-05-17 03:11:05,015] {docker.py:276} INFO - 21/05/17 06:11:05 INFO CodeGenerator: Code generated in 35.103 ms
[2021-05-17 03:11:05,052] {docker.py:276} INFO - 21/05/17 06:11:05 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621226414_to_1621228214.csv, range: 0-104299, partition values: [empty row]
[2021-05-17 03:11:05,061] {docker.py:276} INFO - 21/05/17 06:11:05 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621215614_to_1621217414.csv, range: 0-104214, partition values: [empty row]
[2021-05-17 03:11:05,062] {docker.py:276} INFO - 21/05/17 06:11:05 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621224614_to_1621226414.csv, range: 0-103881, partition values: [empty row]
[2021-05-17 03:11:05,071] {docker.py:276} INFO - 21/05/17 06:11:05 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621224614_to_1621226414.csv, range: 0-104113, partition values: [empty row]
[2021-05-17 03:11:05,984] {docker.py:276} INFO - 21/05/17 06:11:06 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv, range: 0-104268, partition values: [empty row]
[2021-05-17 03:11:06,481] {docker.py:276} INFO - 21/05/17 06:11:06 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621219214_to_1621221014.csv, range: 0-104258, partition values: [empty row]
[2021-05-17 03:11:06,548] {docker.py:276} INFO - 21/05/17 06:11:06 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621221014_to_1621222814.csv, range: 0-104205, partition values: [empty row]
[2021-05-17 03:11:06,568] {docker.py:276} INFO - 21/05/17 06:11:06 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621219214_to_1621221014.csv, range: 0-103858, partition values: [empty row]
[2021-05-17 03:11:06,573] {docker.py:276} INFO - 21/05/17 06:11:06 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621217414_to_1621219214.csv, range: 0-104040, partition values: [empty row]
[2021-05-17 03:11:06,866] {docker.py:276} INFO - 21/05/17 06:11:06 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621221014_to_1621222814.csv, range: 0-104236, partition values: [empty row]
[2021-05-17 03:11:06,944] {docker.py:276} INFO - 21/05/17 06:11:06 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621217414_to_1621219214.csv, range: 0-103623, partition values: [empty row]
[2021-05-17 03:11:07,059] {docker.py:276} INFO - 21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621222814_to_1621224614.csv, range: 0-104186, partition values: [empty row]
[2021-05-17 03:11:07,091] {docker.py:276} INFO - 21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621226414_to_1621228214.csv, range: 0-104026, partition values: [empty row]
[2021-05-17 03:11:07,232] {docker.py:276} INFO - 21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621215614_to_1621217414.csv, range: 0-104223, partition values: [empty row]
[2021-05-17 03:11:07,326] {docker.py:276} INFO - 21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621215193_to_1621215614.csv, range: 0-24464, partition values: [empty row]
[2021-05-17 03:11:07,439] {docker.py:276} INFO - 21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621219214_to_1621221014.csv, range: 0-104184, partition values: [empty row]
[2021-05-17 03:11:07,465] {docker.py:276} INFO - 21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv, range: 0-104022, partition values: [empty row]
[2021-05-17 03:11:07,617] {docker.py:276} INFO - 21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621222814_to_1621224614.csv, range: 0-104223, partition values: [empty row]
[2021-05-17 03:11:07,684] {docker.py:276} INFO - 21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621215193_to_1621215614.csv, range: 0-24445, partition values: [empty row]
[2021-05-17 03:11:07,852] {docker.py:276} INFO - 21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621222814_to_1621224614.csv, range: 0-104137, partition values: [empty row]
[2021-05-17 03:11:07,867] {docker.py:276} INFO - 21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621215614_to_1621217414.csv, range: 0-104009, partition values: [empty row]
[2021-05-17 03:11:07,970] {docker.py:276} INFO - 21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621226414_to_1621228214.csv, range: 0-104223, partition values: [empty row]
[2021-05-17 03:11:08,053] {docker.py:276} INFO - 21/05/17 06:11:08 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621215193_to_1621215614.csv, range: 0-24430, partition values: [empty row]
[2021-05-17 03:11:08,240] {docker.py:276} INFO - 21/05/17 06:11:08 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv, range: 0-104120, partition values: [empty row]
[2021-05-17 03:11:08,276] {docker.py:276} INFO - 21/05/17 06:11:08 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621224614_to_1621226414.csv, range: 0-104007, partition values: [empty row]
[2021-05-17 03:37:48,997] {docker.py:276} INFO - 21/05/17 06:11:11 INFO Executor: Finished task 0.0 in stage 1.0 (TID 1). 2722 bytes result sent to driver
[2021-05-17 03:37:49,007] {docker.py:276} INFO - 21/05/17 06:11:11 INFO TaskSetManager: Finished task 0.0 in stage 1.0 (TID 1) in 6844 ms on fb991e38a3b1 (executor driver) (1/4)
[2021-05-17 03:37:49,582] {docker.py:276} INFO - 21/05/17 06:11:12 ERROR Executor: Exception in task 1.0 in stage 1.0 (TID 2)
java.nio.file.AccessDeniedException: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: getFileStatus on s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=:403 Forbidden
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:230)
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:151)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2198)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:2163)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getFileStatus(S3AFileSystem.java:2102)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:702)
	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:899)
	at org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:86)
	at org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.<init>(HadoopFileLinesReader.scala:65)
	at org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$.readFile(CSVDataSource.scala:97)
	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$1(CSVFileFormat.scala:148)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:147)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:132)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:116)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:169)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:93)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.agg_doAggregateWithKeys_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:755)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:132)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)
	at org.apache.spark.scheduler.Task.run(Task.scala:131)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:497)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1439)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:500)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1819)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1403)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1372)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1145)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:802)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:770)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:744)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:704)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:686)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:550)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:530)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5445)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5392)
	at com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1367)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$4(S3AFileSystem.java:1249)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:322)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:285)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:1246)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2183)
	... 30 more
[2021-05-17 03:37:49,631] {docker.py:276} INFO - 21/05/17 06:11:12 WARN TaskSetManager: Lost task 1.0 in stage 1.0 (TID 2) (fb991e38a3b1 executor driver): java.nio.file.AccessDeniedException: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: getFileStatus on s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=:403 Forbidden
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:230)
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:151)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2198)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:2163)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getFileStatus(S3AFileSystem.java:2102)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:702)
	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:899)
	at org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:86)
	at org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.<init>(HadoopFileLinesReader.scala:65)
	at org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$.readFile(CSVDataSource.scala:97)
	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$1(CSVFileFormat.scala:148)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:147)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:132)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:116)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:169)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:93)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.agg_doAggregateWithKeys_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:755)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:132)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)
	at org.apache.spark.scheduler.Task.run(Task.scala:131)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:497)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1439)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:500)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1819)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1403)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1372)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1145)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:802)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:770)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:744)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:704)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:686)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:550)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:530)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5445)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5392)
	at com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1367)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$4(S3AFileSystem.java:1249)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:322)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:285)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:1246)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2183)
	... 30 more
[2021-05-17 03:37:49,633] {docker.py:276} INFO - 21/05/17 06:11:12 ERROR TaskSetManager: Task 1 in stage 1.0 failed 1 times; aborting job
[2021-05-17 03:37:49,646] {docker.py:276} INFO - 21/05/17 06:11:12 INFO TaskSchedulerImpl: Cancelling stage 1
21/05/17 06:11:12 INFO TaskSchedulerImpl: Killing all running tasks in stage 1: Stage cancelled
[2021-05-17 03:37:49,653] {docker.py:276} INFO - 21/05/17 06:11:12 INFO Executor: Executor is trying to kill task 2.0 in stage 1.0 (TID 3), reason: Stage cancelled
[2021-05-17 03:37:49,654] {docker.py:276} INFO - 21/05/17 06:11:12 INFO Executor: Executor is trying to kill task 3.0 in stage 1.0 (TID 4), reason: Stage cancelled
[2021-05-17 03:37:49,654] {docker.py:276} INFO - 21/05/17 06:11:12 INFO TaskSchedulerImpl: Stage 1 was cancelled
[2021-05-17 03:37:49,656] {docker.py:276} INFO - 21/05/17 06:11:12 INFO DAGScheduler: ShuffleMapStage 1 (csv at NativeMethodAccessorImpl.java:0) failed in 7.527 s due to Job aborted due to stage failure: Task 1 in stage 1.0 failed 1 times, most recent failure: Lost task 1.0 in stage 1.0 (TID 2) (fb991e38a3b1 executor driver): java.nio.file.AccessDeniedException: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: getFileStatus on s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=:403 Forbidden
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:230)
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:151)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2198)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:2163)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getFileStatus(S3AFileSystem.java:2102)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:702)
	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:899)
	at org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:86)
	at org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.<init>(HadoopFileLinesReader.scala:65)
	at org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$.readFile(CSVDataSource.scala:97)
	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$1(CSVFileFormat.scala:148)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:147)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:132)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:116)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:169)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:93)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.agg_doAggregateWithKeys_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:755)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:132)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)
	at org.apache.spark.scheduler.Task.run(Task.scala:131)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:497)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1439)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:500)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1819)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1403)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1372)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1145)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:802)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:770)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:744)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:704)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:686)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:550)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:530)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5445)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5392)
	at com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1367)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$4(S3AFileSystem.java:1249)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:322)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:285)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:1246)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2183)
	... 30 more

Driver stacktrace:
[2021-05-17 03:37:49,660] {docker.py:276} INFO - 21/05/17 06:11:12 INFO DAGScheduler: Job 1 failed: csv at NativeMethodAccessorImpl.java:0, took 7.556433 s
[2021-05-17 03:37:49,680] {docker.py:276} INFO - 21/05/17 06:11:12 ERROR FileFormatWriter: Aborting job 61e9ceda-83c2-4d73-b501-1099d374a96d.
org.apache.spark.SparkException: Job aborted due to stage failure: Task 1 in stage 1.0 failed 1 times, most recent failure: Lost task 1.0 in stage 1.0 (TID 2) (fb991e38a3b1 executor driver): java.nio.file.AccessDeniedException: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: getFileStatus on s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=:403 Forbidden
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:230)
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:151)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2198)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:2163)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getFileStatus(S3AFileSystem.java:2102)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:702)
	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:899)
	at org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:86)
	at org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.<init>(HadoopFileLinesReader.scala:65)
	at org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$.readFile(CSVDataSource.scala:97)
	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$1(CSVFileFormat.scala:148)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:147)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:132)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:116)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:169)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:93)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.agg_doAggregateWithKeys_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:755)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:132)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)
	at org.apache.spark.scheduler.Task.run(Task.scala:131)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:497)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1439)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:500)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1819)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1403)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1372)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1145)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:802)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:770)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:744)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:704)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:686)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:550)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:530)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5445)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5392)
	at com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1367)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$4(S3AFileSystem.java:1249)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:322)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:285)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:1246)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2183)
	... 30 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2253)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2202)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2201)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2201)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1078)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1078)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1078)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:2440)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2382)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2371)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:868)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2202)
	at org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:200)
	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:188)
	at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult$lzycompute(commands.scala:108)
	at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult(commands.scala:106)
	at org.apache.spark.sql.execution.command.DataWritingCommandExec.doExecute(commands.scala:131)
	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
	at org.apache.spark.rdd.RDDOperati
[2021-05-17 03:37:49,681] {docker.py:276} INFO - onScope$
[2021-05-17 03:37:49,682] {docker.py:276} INFO - .withScope(RDDOperationScope.scala:151)
	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
	at org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:132)
	at org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:131)
	at org.apache.spark.sql.DataFrameWriter.$anonfun$runCommand$1(DataFrameWriter.scala:989)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:103)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:163)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:90)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:772)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:989)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:438)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:415)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:293)
	at org.apache.spark.sql.DataFrameWriter.csv(DataFrameWriter.scala:979)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.GatewayConnection.run(GatewayConnection.java:238)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.nio.file.AccessDeniedException: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: getFileStatus on s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=:403 Forbidden
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:230)
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:151)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2198)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:2163)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getFileStatus(S3AFileSystem.java:2102)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:702)
	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:899)
	at org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:86)
	at org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.<init>(HadoopFileLinesReader.scala:65)
	at org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$.readFile(CSVDataSource.scala:97)
	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$1(CSVFileFormat.scala:148)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:147)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:132)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:116)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:169)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:93)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.agg_doAggregateWithKeys_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:755)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:132)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)
	at org.apache.spark.scheduler.Task.run(Task.scala:131)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:497)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1439)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:500)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	... 1 more
Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1819)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1403)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1372)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1145)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:802)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:770)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:744)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:704)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:686)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:550)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:530)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5445)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5392)
	at com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1367)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$4(S3AFileSystem.java:1249)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:322)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:285)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:1246)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2183)
	... 30 more
[2021-05-17 03:37:49,682] {docker.py:276} INFO - 21/05/17 06:11:12 INFO AbstractS3ACommitter: Task committer attempt_202105170611047015042444317197751_0000_m_000000_0: aborting job (no job ID) in state FAILED
[2021-05-17 03:37:49,683] {docker.py:276} INFO - 21/05/17 06:11:12 INFO StagingCommitter: Starting: Task committer attempt_202105170611047015042444317197751_0000_m_000000_0: aborting job in state (no job ID)
[2021-05-17 03:37:49,684] {docker.py:276} INFO - 21/05/17 06:11:12 INFO AbstractS3ACommitter: Task committer attempt_202105170611047015042444317197751_0000_m_000000_0: no pending commits to abort
[2021-05-17 03:37:49,684] {docker.py:276} INFO - 21/05/17 06:11:12 INFO StagingCommitter: Task committer attempt_202105170611047015042444317197751_0000_m_000000_0: aborting job in state (no job ID) : duration 0:00.012s
[2021-05-17 03:37:49,898] {docker.py:276} INFO - 21/05/17 06:11:12 INFO Executor: Executor interrupted and killed task 2.0 in stage 1.0 (TID 3), reason: Stage cancelled
[2021-05-17 03:37:49,915] {docker.py:276} INFO - 21/05/17 06:11:12 WARN TaskSetManager: Lost task 2.0 in stage 1.0 (TID 3) (fb991e38a3b1 executor driver): TaskKilled (Stage cancelled)
[2021-05-17 03:37:50,656] {docker.py:276} INFO - 21/05/17 06:11:13 INFO Executor: Executor killed task 3.0 in stage 1.0 (TID 4), reason: Stage cancelled
[2021-05-17 03:37:50,665] {docker.py:276} INFO - 21/05/17 06:11:13 WARN TaskSetManager: Lost task 3.0 in stage 1.0 (TID 4) (fb991e38a3b1 executor driver): TaskKilled (Stage cancelled)
21/05/17 06:11:13 INFO TaskSchedulerImpl: Removed TaskSet 1.0, whose tasks have all completed, from pool
[2021-05-17 03:37:50,907] {docker.py:276} INFO - 21/05/17 06:11:13 INFO AbstractS3ACommitter: Starting: Cleanup job (no job ID)
[2021-05-17 03:37:50,907] {docker.py:276} INFO - 21/05/17 06:11:13 INFO AbstractS3ACommitter: Starting: Aborting all pending commits under s3a://udac-forex-project/consolidated_data
[2021-05-17 03:37:51,118] {docker.py:276} INFO - 21/05/17 06:11:13 INFO AbstractS3ACommitter: Aborting all pending commits under s3a://udac-forex-project/consolidated_data: duration 0:00.213s
21/05/17 06:11:13 INFO AbstractS3ACommitter: Cleanup job (no job ID): duration 0:00.213s
[2021-05-17 03:37:52,321] {docker.py:276} INFO - Traceback (most recent call last):
  File "/home/jovyan/spark.py", line 72, in <module>
    df \
  File "/usr/local/spark/python/pyspark/sql/readwriter.py", line 1371, in csv
[2021-05-17 03:37:52,322] {docker.py:276} INFO - self._jwrite.csv(path)
  File "/usr/local/spark/python/lib/py4j-0.10.9-src.zip/py4j/java_gateway.py", line 1304, in __call__
[2021-05-17 03:37:52,325] {docker.py:276} INFO - File "/usr/local/spark/python/pyspark/sql/utils.py", line 111, in deco
    return f(*a, **kw)
  File "/usr/local/spark/python/lib/py4j-0.10.9-src.zip/py4j/protocol.py", line 326, in get_return_value
[2021-05-17 03:37:52,326] {docker.py:276} INFO - py4j.protocol.Py4JJavaError
[2021-05-17 03:37:52,367] {docker.py:276} INFO - : An error occurred while calling o89.csv.
: org.apache.spark.SparkException: Job aborted.
	at org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:231)
	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:188)
	at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult$lzycompute(commands.scala:108)
	at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult(commands.scala:106)
	at org.apache.spark.sql.execution.command.DataWritingCommandExec.doExecute(commands.scala:131)
	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
	at org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:132)
	at org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:131)
	at org.apache.spark.sql.DataFrameWriter.$anonfun$runCommand$1(DataFrameWriter.scala:989)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:103)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:163)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:90)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:772)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:989)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:438)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:415)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:293)
	at org.apache.spark.sql.DataFrameWriter.csv(DataFrameWriter.scala:979)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.GatewayConnection.run(GatewayConnection.java:238)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.apache.spark.SparkException: Job aborted due to stage failure: Task 1 in stage 1.0 failed 1 times, most recent failure: Lost task 1.0 in stage 1.0 (TID 2) (fb991e38a3b1 executor driver): java.nio.file.AccessDeniedException: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: getFileStatus on s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=:403 Forbidden
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:230)
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:151)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2198)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:2163)
	at org.apache.hadoop.fs.s3
[2021-05-17 03:37:52,368] {docker.py:276} INFO - a.S3AFileSystem.getFileStatus(S3AFileSystem.java:2102)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:702)
	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:899)
	at org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:86)
	at org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.<init>(HadoopFileLinesReader.scala:65)
	at org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$.readFile(CSVDataSource.scala:97)
	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$1(CSVFileFormat.scala:148)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:147)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:132)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:116)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:169)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:93)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.agg_doAggregateWithKeys_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:755)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:132)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)
	at org.apache.spark.scheduler.Task.run(Task.scala:131)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:497)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1439)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:500)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1819)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1403)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1372)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1145)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:802)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:770)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:744)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:704)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:686)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:550)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:530)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5445)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5392)
	at com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1367)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$4(S3AFileSystem.java:1249)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:322)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:285)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:1246)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2183)
	... 30 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2253)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2202)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2201)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2201)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1078)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1078)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1078)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:2440)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2382)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2371)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:868)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2202)
	at org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:200)
	... 33 more
Caused by: java.nio.file.AccessDeniedException: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: getFileStatus on s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=:403 Forbidden
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:230)
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:151)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2198)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:2163)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getFileStatus(S3AFileSystem.java:2102)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:702)
	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:899)
	at org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:86)
	at org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.<init>(HadoopFileLinesReader.scala:65)
	at org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$.readFile(CSVDataSource.scala:97)
	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$1(CSVFileFormat.scala:148)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:147)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:132)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$F
[2021-05-17 03:37:52,369] {docker.py:276} INFO - ileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:116)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:169)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:93)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.agg_doAggregateWithKeys_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:755)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:132)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)
	at org.apache.spark.scheduler.Task.run(Task.scala:131)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:497)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1439)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:500)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	... 1 more
Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1819)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1403)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1372)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1145)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:802)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:770)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:744)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:704)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:686)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:550)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:530)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5445)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5392)
	at com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1367)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$4(S3AFileSystem.java:1249)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:322)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:285)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:1246)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2183)
	... 30 more
[2021-05-17 03:37:52,440] {docker.py:276} INFO - 21/05/17 06:11:15 INFO BlockManagerInfo: Removed broadcast_4_piece0 on fb991e38a3b1:35871 in memory (size: 12.0 KiB, free: 934.4 MiB)
[2021-05-17 03:37:52,535] {docker.py:276} INFO - 21/05/17 06:11:15 INFO SparkContext: Invoking stop() from shutdown hook
[2021-05-17 03:37:52,557] {docker.py:276} INFO - 21/05/17 06:11:15 INFO SparkUI: Stopped Spark web UI at http://fb991e38a3b1:4040
[2021-05-17 03:37:52,595] {docker.py:276} INFO - 21/05/17 06:11:15 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!
[2021-05-17 03:37:52,620] {docker.py:276} INFO - 21/05/17 06:11:15 INFO MemoryStore: MemoryStore cleared
[2021-05-17 03:37:52,621] {docker.py:276} INFO - 21/05/17 06:11:15 INFO BlockManager: BlockManager stopped
[2021-05-17 03:37:52,627] {docker.py:276} INFO - 21/05/17 06:11:15 INFO BlockManagerMaster: BlockManagerMaster stopped
[2021-05-17 03:37:52,633] {docker.py:276} INFO - 21/05/17 06:11:15 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!
[2021-05-17 03:37:52,648] {docker.py:276} INFO - 21/05/17 06:11:15 INFO SparkContext: Successfully stopped SparkContext
[2021-05-17 03:37:52,650] {docker.py:276} INFO - 21/05/17 06:11:15 INFO ShutdownHookManager: Shutdown hook called
[2021-05-17 03:37:52,652] {docker.py:276} INFO - 21/05/17 06:11:15 INFO ShutdownHookManager: Deleting directory /tmp/spark-83480827-7eb0-4479-a604-e9e7f8e5c699
[2021-05-17 03:37:52,657] {docker.py:276} INFO - 21/05/17 06:11:15 INFO ShutdownHookManager: Deleting directory /tmp/spark-a985d331-2309-4264-9ca5-d055e52a97a6/pyspark-0d770c18-4631-421a-b925-557ad7f8274d
[2021-05-17 03:37:52,660] {docker.py:276} INFO - 21/05/17 06:11:15 INFO ShutdownHookManager: Deleting directory /tmp/spark-a985d331-2309-4264-9ca5-d055e52a97a6
[2021-05-17 03:37:52,669] {docker.py:276} INFO - 21/05/17 06:11:15 INFO MetricsSystemImpl: Stopping s3a-file-system metrics system...
[2021-05-17 03:37:52,670] {docker.py:276} INFO - 21/05/17 06:11:15 INFO MetricsSystemImpl: s3a-file-system metrics system stopped.
[2021-05-17 03:37:52,671] {docker.py:276} INFO - 21/05/17 06:11:15 INFO MetricsSystemImpl: s3a-file-system metrics system shutdown complete.
[2021-05-17 03:37:52,916] {taskinstance.py:1482} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1138, in _run_raw_task
    self._prepare_and_execute_task_with_callbacks(context, task)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1311, in _prepare_and_execute_task_with_callbacks
    result = self._execute_task(context, task_copy)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1341, in _execute_task
    result = task_copy.execute(context=context)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/airflow/providers/docker/operators/docker.py", line 321, in execute
    return self._run_image()
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/airflow/providers/docker/operators/docker.py", line 281, in _run_image
    raise AirflowException('docker container failed: ' + repr(result) + f"lines {res_lines}")
airflow.exceptions.AirflowException: docker container failed: {'Error': None, 'StatusCode': 1}lines WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.spark.unsafe.Platform (file:/usr/local/spark-3.1.1-bin-hadoop3.2/jars/spark-unsafe_2.12-3.1.1.jar) to constructor java.nio.DirectByteBuffer(long,int)
WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
21/05/17 06:10:33 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties
21/05/17 06:10:35 INFO SparkContext: Running Spark version 3.1.1
21/05/17 06:10:35 INFO ResourceUtils: ==============================================================
21/05/17 06:10:35 INFO ResourceUtils: No custom resources configured for spark.driver.
21/05/17 06:10:35 INFO ResourceUtils: ==============================================================
21/05/17 06:10:35 INFO SparkContext: Submitted application: spark.py
21/05/17 06:10:35 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(memoryOverhead -> name: memoryOverhead, amount: 884, script: , vendor: , cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 4096, script: , vendor: , offHeap -> name: offHeap, amount: 500, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
21/05/17 06:10:35 INFO ResourceProfile: Limiting resource is cpu
21/05/17 06:10:35 INFO ResourceProfileManager: Added ResourceProfile id: 0
21/05/17 06:10:36 INFO SecurityManager: Changing view acls to: jovyan
21/05/17 06:10:36 INFO SecurityManager: Changing modify acls to: jovyan
21/05/17 06:10:36 INFO SecurityManager: Changing view acls groups to:
21/05/17 06:10:36 INFO SecurityManager: Changing modify acls groups to: 
21/05/17 06:10:36 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(jovyan); groups with view permissions: Set(); users  with modify permissions: Set(jovyan); groups with modify permissions: Set()
21/05/17 06:10:36 INFO Utils: Successfully started service 'sparkDriver' on port 41559.
21/05/17 06:10:36 INFO SparkEnv: Registering MapOutputTracker
21/05/17 06:10:36 INFO SparkEnv: Registering BlockManagerMaster
21/05/17 06:10:36 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
21/05/17 06:10:36 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
21/05/17 06:10:36 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
21/05/17 06:10:36 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-c5ebe07a-8c5b-431c-8ab9-0a487c0d3bde
21/05/17 06:10:36 INFO MemoryStore: MemoryStore started with capacity 934.4 MiB
21/05/17 06:10:36 INFO SparkEnv: Registering OutputCommitCoordinator
21/05/17 06:10:37 INFO Utils: Successfully started service 'SparkUI' on port 4040.
21/05/17 06:10:37 INFO SparkUI: Bound SparkUI to 0.0.0.0, and started at http://fb991e38a3b1:4040
21/05/17 06:10:37 INFO Executor: Starting executor ID driver on host fb991e38a3b1
21/05/17 06:10:37 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 35871.
21/05/17 06:10:37 INFO NettyBlockTransferService: Server created on fb991e38a3b1:35871
21/05/17 06:10:37 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
21/05/17 06:10:37 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, fb991e38a3b1, 35871, None)
21/05/17 06:10:37 INFO BlockManagerMasterEndpoint: Registering block manager fb991e38a3b1:35871 with 934.4 MiB RAM, BlockManagerId(driver, fb991e38a3b1, 35871, None)
21/05/17 06:10:37 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, fb991e38a3b1, 35871, None)
21/05/17 06:10:37 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, fb991e38a3b1, 35871, None)
21/05/17 06:10:38 INFO SharedState: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir ('file:/home/jovyan/spark-warehouse').
21/05/17 06:10:38 INFO SharedState: Warehouse path is 'file:/home/jovyan/spark-warehouse'.
21/05/17 06:10:39 WARN MetricsConfig: Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties
21/05/17 06:10:39 INFO MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
21/05/17 06:10:39 INFO MetricsSystemImpl: s3a-file-system metrics system started
21/05/17 06:10:50 INFO InMemoryFileIndex: It took 5126 ms to list leaf files for 27 paths.
21/05/17 06:10:56 INFO InMemoryFileIndex: It took 5683 ms to list leaf files for 27 paths.
21/05/17 06:10:59 INFO FileSourceStrategy: Pushed Filters:
21/05/17 06:10:59 INFO FileSourceStrategy: Post-Scan Filters: (length(trim(value#0, None)) > 0)
21/05/17 06:10:59 INFO FileSourceStrategy: Output Data Schema: struct<value: string>
21/05/17 06:11:00 INFO CodeGenerator: Code generated in 263.6994 ms
21/05/17 06:11:00 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 177.6 KiB, free 934.2 MiB)
21/05/17 06:11:00 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 28.2 KiB, free 934.2 MiB)
21/05/17 06:11:00 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on fb991e38a3b1:35871 (size: 28.2 KiB, free: 934.4 MiB)
21/05/17 06:11:00 INFO SparkContext: Created broadcast 0 from csv at NativeMethodAccessorImpl.java:0
21/05/17 06:11:00 INFO FileSourceScanExec: Planning scan with bin packing, max size: 28954488 bytes, open cost is considered as scanning 4194304 bytes.
21/05/17 06:11:00 INFO SparkContext: Starting job: csv at NativeMethodAccessorImpl.java:0
21/05/17 06:11:00 INFO DAGScheduler: Got job 0 (csv at NativeMethodAccessorImpl.java:0) with 1 output partitions
21/05/17 06:11:00 INFO DAGScheduler: Final stage: ResultStage 0 (csv at NativeMethodAccessorImpl.java:0)
21/05/17 06:11:00 INFO DAGScheduler: Parents of final stage: List()
21/05/17 06:11:00 INFO DAGScheduler: Missing parents: List()
21/05/17 06:11:00 INFO DAGScheduler: Submitting ResultStage 0 (MapPartitionsRDD[3] at csv at NativeMethodAccessorImpl.java:0), which has no missing parents
21/05/17 06:11:00 INFO MemoryStore: Block broadcast_1 stored as values in memory (estimated size 10.8 KiB, free 934.2 MiB)
21/05/17 06:11:00 INFO MemoryStore: Block broadcast_1_piece0 stored as bytes in memory (estimated size 5.4 KiB, free 934.2 MiB)
21/05/17 06:11:00 INFO BlockManagerInfo: Added broadcast_1_piece0 in memory on fb991e38a3b1:35871 (size: 5.4 KiB, free: 934.4 MiB)
21/05/17 06:11:00 INFO SparkContext: Created broadcast 1 from broadcast at DAGScheduler.scala:1383
21/05/17 06:11:00 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 0 (MapPartitionsRDD[3] at csv at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
21/05/17 06:11:00 INFO TaskSchedulerImpl: Adding task set 0.0 with 1 tasks resource profile 0
21/05/17 06:11:00 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0) (fb991e38a3b1, executor driver, partition 0, PROCESS_LOCAL, 5565 bytes) taskResourceAssignments Map()
21/05/17 06:11:00 INFO Executor: Running task 0.0 in stage 0.0 (TID 0)
21/05/17 06:11:00 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621226414_to_1621228214.csv, range: 0-104299, partition values: [empty row]
21/05/17 06:11:00 INFO CodeGenerator: Code generated in 23.4864 ms
21/05/17 06:11:01 INFO Executor: Finished task 0.0 in stage 0.0 (TID 0). 1607 bytes result sent to driver
21/05/17 06:11:01 INFO TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 834 ms on fb991e38a3b1 (executor driver) (1/1)
21/05/17 06:11:01 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool
21/05/17 06:11:01 INFO DAGScheduler: ResultStage 0 (csv at NativeMethodAccessorImpl.java:0) finished in 1.042 s
21/05/17 06:11:01 INFO DAGScheduler: Job 0 is finished. Cancelling potential speculative or zombie tasks for this job
21/05/17 06:11:01 INFO TaskSchedulerImpl: Killing all running tasks in stage 0: Stage finished
21/05/17 06:11:01 INFO DAGScheduler: Job 0 finished: csv at NativeMethodAccessorImpl.java:0, took 1.109304 s
21/05/17 06:11:01 INFO CodeGenerator: Code generated in 30.4855 ms
21/05/17 06:11:01 INFO BlockManagerInfo: Removed broadcast_1_piece0 on fb991e38a3b1:35871 in memory (size: 5.4 KiB, free: 934.4 MiB)
21/05/17 06:11:01 INFO FileSourceStrategy: Pushed Filters:
21/05/17 06:11:01 INFO FileSourceStrategy: Post-Scan Filters:
21/05/17 06:11:01 INFO FileSourceStrategy: Output Data Schema: struct<value: string>
21/05/17 06:11:01 INFO MemoryStore: Block broadcast_2 stored as values in memory (estimated size 177.6 KiB, free 934.0 MiB)
21/05/17 06:11:01 INFO MemoryStore: Block broadcast_2_piece0 stored as bytes in memory (estimated size 28.2 KiB, free 934.0 MiB)
21/05/17 06:11:01 INFO BlockManagerInfo: Added broadcast_2_piece0 in memory on fb991e38a3b1:35871 (size: 28.2 KiB, free: 934.3 MiB)
21/05/17 06:11:01 INFO SparkContext: Created broadcast 2 from csv at NativeMethodAccessorImpl.java:0
21/05/17 06:11:01 INFO FileSourceScanExec: Planning scan with bin packing, max size: 28954488 bytes, open cost is considered as scanning 4194304 bytes.
21/05/17 06:11:01 INFO BlockManagerInfo: Removed broadcast_0_piece0 on fb991e38a3b1:35871 in memory (size: 28.2 KiB, free: 934.4 MiB)
21/05/17 06:11:02 INFO FileSourceStrategy: Pushed Filters:
21/05/17 06:11:02 INFO FileSourceStrategy: Post-Scan Filters:
21/05/17 06:11:02 INFO FileSourceStrategy: Output Data Schema: struct<ts: string, n: string, bid: string, ask: string, value: string ... 7 more fields>
21/05/17 06:11:04 INFO FileOutputCommitter: File Output Committer Algorithm version is 1
21/05/17 06:11:04 INFO FileOutputCommitter: FileOutputCommitter skip cleanup _temporary folders under output directory:false, ignore cleanup failures: false
21/05/17 06:11:04 INFO AbstractS3ACommitterFactory: Using committer partitioned to output data to s3a://udac-forex-project/consolidated_data
21/05/17 06:11:04 INFO AbstractS3ACommitterFactory: Using Commmitter PartitionedStagingCommitter{StagingCommitter{AbstractS3ACommitter{role=Task committer attempt_202105170611047015042444317197751_0000_m_000000_0, name=partitioned, outputPath=s3a://udac-forex-project/consolidated_data, workPath=file:/tmp/hadoop-jovyan/s3a/61e9ceda-83c2-4d73-b501-1099d374a96d/_temporary/0/_temporary/attempt_202105170611047015042444317197751_0000_m_000000_0}, conflictResolution=REPLACE, wrappedCommitter=FileOutputCommitter{PathOutputCommitter{context=TaskAttemptContextImpl{JobContextImpl{jobId=job_202105170611047015042444317197751_0000}; taskId=attempt_202105170611047015042444317197751_0000_m_000000_0, status=''}; org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter@13157f9e}; outputPath=file:/home/jovyan/tmp/staging/jovyan/61e9ceda-83c2-4d73-b501-1099d374a96d/staging-uploads, workPath=null, algorithmVersion=1, skipCleanup=false, ignoreCleanupFailures=false}}} for s3a://udac-forex-project/consolidated_data
21/05/17 06:11:04 INFO SQLHadoopMapReduceCommitProtocol: Using output committer class org.apache.hadoop.fs.s3a.commit.staging.PartitionedStagingCommitter
21/05/17 06:11:04 INFO HashAggregateExec: spark.sql.codegen.aggregate.map.twolevel.enabled is set to true, but current version of codegened fast hashmap does not support this aggregate.
21/05/17 06:11:04 INFO BlockManagerInfo: Removed broadcast_2_piece0 on fb991e38a3b1:35871 in memory (size: 28.2 KiB, free: 934.4 MiB)
21/05/17 06:11:04 INFO CodeGenerator: Code generated in 87.7916 ms
21/05/17 06:11:04 INFO HashAggregateExec: spark.sql.codegen.aggregate.map.twolevel.enabled is set to true, but current version of codegened fast hashmap does not support this aggregate.
21/05/17 06:11:04 INFO CodeGenerator: Code generated in 51.3525 ms
21/05/17 06:11:04 INFO MemoryStore: Block broadcast_3 stored as values in memory (estimated size 177.5 KiB, free 934.2 MiB)
21/05/17 06:11:04 INFO MemoryStore: Block broadcast_3_piece0 stored as bytes in memory (estimated size 28.2 KiB, free 934.2 MiB)
21/05/17 06:11:04 INFO BlockManagerInfo: Added broadcast_3_piece0 in memory on fb991e38a3b1:35871 (size: 28.2 KiB, free: 934.4 MiB)
21/05/17 06:11:04 INFO SparkContext: Created broadcast 3 from csv at NativeMethodAccessorImpl.java:0
21/05/17 06:11:04 INFO FileSourceScanExec: Planning scan with bin packing, max size: 28954488 bytes, open cost is considered as scanning 4194304 bytes.
21/05/17 06:11:04 INFO SparkContext: Starting job: csv at NativeMethodAccessorImpl.java:0
21/05/17 06:11:04 INFO DAGScheduler: Registering RDD 13 (csv at NativeMethodAccessorImpl.java:0) as input to shuffle 0
21/05/17 06:11:04 INFO DAGScheduler: Got job 1 (csv at NativeMethodAccessorImpl.java:0) with 200 output partitions
21/05/17 06:11:04 INFO DAGScheduler: Final stage: ResultStage 2 (csv at NativeMethodAccessorImpl.java:0)
21/05/17 06:11:04 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 1)
21/05/17 06:11:04 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 1)
21/05/17 06:11:04 INFO DAGScheduler: Submitting ShuffleMapStage 1 (MapPartitionsRDD[13] at csv at NativeMethodAccessorImpl.java:0), which has no missing parents
21/05/17 06:11:04 INFO MemoryStore: Block broadcast_4 stored as values in memory (estimated size 28.0 KiB, free 934.2 MiB)
21/05/17 06:11:04 INFO MemoryStore: Block broadcast_4_piece0 stored as bytes in memory (estimated size 12.0 KiB, free 934.2 MiB)
21/05/17 06:11:04 INFO BlockManagerInfo: Added broadcast_4_piece0 in memory on fb991e38a3b1:35871 (size: 12.0 KiB, free: 934.4 MiB)
21/05/17 06:11:04 INFO SparkContext: Created broadcast 4 from broadcast at DAGScheduler.scala:1383
21/05/17 06:11:04 INFO DAGScheduler: Submitting 4 missing tasks from ShuffleMapStage 1 (MapPartitionsRDD[13] at csv at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0, 1, 2, 3))
21/05/17 06:11:04 INFO TaskSchedulerImpl: Adding task set 1.0 with 4 tasks resource profile 0
21/05/17 06:11:04 INFO TaskSetManager: Starting task 0.0 in stage 1.0 (TID 1) (fb991e38a3b1, executor driver, partition 0, PROCESS_LOCAL, 5554 bytes) taskResourceAssignments Map()
21/05/17 06:11:04 INFO TaskSetManager: Starting task 1.0 in stage 1.0 (TID 2) (fb991e38a3b1, executor driver, partition 1, PROCESS_LOCAL, 5554 bytes) taskResourceAssignments Map()
21/05/17 06:11:04 INFO TaskSetManager: Starting task 2.0 in stage 1.0 (TID 3) (fb991e38a3b1, executor driver, partition 2, PROCESS_LOCAL, 5554 bytes) taskResourceAssignments Map()
21/05/17 06:11:04 INFO TaskSetManager: Starting task 3.0 in stage 1.0 (TID 4) (fb991e38a3b1, executor driver, partition 3, PROCESS_LOCAL, 5444 bytes) taskResourceAssignments Map()
21/05/17 06:11:04 INFO Executor: Running task 0.0 in stage 1.0 (TID 1)
21/05/17 06:11:04 INFO Executor: Running task 1.0 in stage 1.0 (TID 2)
21/05/17 06:11:04 INFO Executor: Running task 2.0 in stage 1.0 (TID 3)
21/05/17 06:11:04 INFO Executor: Running task 3.0 in stage 1.0 (TID 4)
21/05/17 06:11:04 INFO CodeGenerator: Code generated in 61.897 ms
21/05/17 06:11:04 INFO CodeGenerator: Code generated in 16.2955 ms
21/05/17 06:11:05 INFO CodeGenerator: Code generated in 35.103 ms
21/05/17 06:11:05 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621226414_to_1621228214.csv, range: 0-104299, partition values: [empty row]
21/05/17 06:11:05 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621215614_to_1621217414.csv, range: 0-104214, partition values: [empty row]
21/05/17 06:11:05 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621224614_to_1621226414.csv, range: 0-103881, partition values: [empty row]
21/05/17 06:11:05 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621224614_to_1621226414.csv, range: 0-104113, partition values: [empty row]
21/05/17 06:11:06 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv, range: 0-104268, partition values: [empty row]
21/05/17 06:11:06 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621219214_to_1621221014.csv, range: 0-104258, partition values: [empty row]
21/05/17 06:11:06 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621221014_to_1621222814.csv, range: 0-104205, partition values: [empty row]
21/05/17 06:11:06 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621219214_to_1621221014.csv, range: 0-103858, partition values: [empty row]
21/05/17 06:11:06 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621217414_to_1621219214.csv, range: 0-104040, partition values: [empty row]
21/05/17 06:11:06 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621221014_to_1621222814.csv, range: 0-104236, partition values: [empty row]
21/05/17 06:11:06 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621217414_to_1621219214.csv, range: 0-103623, partition values: [empty row]
21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621222814_to_1621224614.csv, range: 0-104186, partition values: [empty row]
21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621226414_to_1621228214.csv, range: 0-104026, partition values: [empty row]
21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621215614_to_1621217414.csv, range: 0-104223, partition values: [empty row]
21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621215193_to_1621215614.csv, range: 0-24464, partition values: [empty row]
21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621219214_to_1621221014.csv, range: 0-104184, partition values: [empty row]
21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv, range: 0-104022, partition values: [empty row]
21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621222814_to_1621224614.csv, range: 0-104223, partition values: [empty row]
21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621215193_to_1621215614.csv, range: 0-24445, partition values: [empty row]
21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621222814_to_1621224614.csv, range: 0-104137, partition values: [empty row]
21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621215614_to_1621217414.csv, range: 0-104009, partition values: [empty row]
21/05/17 06:11:07 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621226414_to_1621228214.csv, range: 0-104223, partition values: [empty row]
21/05/17 06:11:08 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/1/2021-05-17_03_10_14/from_1621215193_to_1621215614.csv, range: 0-24430, partition values: [empty row]
21/05/17 06:11:08 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv, range: 0-104120, partition values: [empty row]
21/05/17 06:11:08 INFO FileScanRDD: Reading File path: s3a://udac-forex-project/3/2021-05-17_03_10_14/from_1621224614_to_1621226414.csv, range: 0-104007, partition values: [empty row]
21/05/17 06:11:11 INFO Executor: Finished task 0.0 in stage 1.0 (TID 1). 2722 bytes result sent to driver
21/05/17 06:11:11 INFO TaskSetManager: Finished task 0.0 in stage 1.0 (TID 1) in 6844 ms on fb991e38a3b1 (executor driver) (1/4)
21/05/17 06:11:12 ERROR Executor: Exception in task 1.0 in stage 1.0 (TID 2)
java.nio.file.AccessDeniedException: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: getFileStatus on s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=:403 Forbidden
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:230)
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:151)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2198)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:2163)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getFileStatus(S3AFileSystem.java:2102)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:702)
	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:899)
	at org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:86)
	at org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.<init>(HadoopFileLinesReader.scala:65)
	at org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$.readFile(CSVDataSource.scala:97)
	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$1(CSVFileFormat.scala:148)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:147)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:132)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:116)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:169)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:93)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.agg_doAggregateWithKeys_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:755)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:132)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)
	at org.apache.spark.scheduler.Task.run(Task.scala:131)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:497)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1439)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:500)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1819)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1403)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1372)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1145)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:802)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:770)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:744)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:704)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:686)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:550)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:530)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5445)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5392)
	at com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1367)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$4(S3AFileSystem.java:1249)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:322)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:285)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:1246)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2183)
	... 30 more
21/05/17 06:11:12 WARN TaskSetManager: Lost task 1.0 in stage 1.0 (TID 2) (fb991e38a3b1 executor driver): java.nio.file.AccessDeniedException: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: getFileStatus on s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=:403 Forbidden
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:230)
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:151)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2198)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:2163)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getFileStatus(S3AFileSystem.java:2102)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:702)
	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:899)
	at org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:86)
	at org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.<init>(HadoopFileLinesReader.scala:65)
	at org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$.readFile(CSVDataSource.scala:97)
	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$1(CSVFileFormat.scala:148)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:147)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:132)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:116)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:169)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:93)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.agg_doAggregateWithKeys_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:755)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:132)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)
	at org.apache.spark.scheduler.Task.run(Task.scala:131)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:497)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1439)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:500)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1819)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1403)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1372)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1145)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:802)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:770)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:744)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:704)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:686)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:550)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:530)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5445)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5392)
	at com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1367)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$4(S3AFileSystem.java:1249)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:322)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:285)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:1246)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2183)
	... 30 more
21/05/17 06:11:12 ERROR TaskSetManager: Task 1 in stage 1.0 failed 1 times; aborting job
21/05/17 06:11:12 INFO TaskSchedulerImpl: Cancelling stage 1
21/05/17 06:11:12 INFO TaskSchedulerImpl: Killing all running tasks in stage 1: Stage cancelled
21/05/17 06:11:12 INFO Executor: Executor is trying to kill task 2.0 in stage 1.0 (TID 3), reason: Stage cancelled
21/05/17 06:11:12 INFO Executor: Executor is trying to kill task 3.0 in stage 1.0 (TID 4), reason: Stage cancelled
21/05/17 06:11:12 INFO TaskSchedulerImpl: Stage 1 was cancelled
21/05/17 06:11:12 INFO DAGScheduler: ShuffleMapStage 1 (csv at NativeMethodAccessorImpl.java:0) failed in 7.527 s due to Job aborted due to stage failure: Task 1 in stage 1.0 failed 1 times, most recent failure: Lost task 1.0 in stage 1.0 (TID 2) (fb991e38a3b1 executor driver): java.nio.file.AccessDeniedException: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: getFileStatus on s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=:403 Forbidden
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:230)
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:151)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2198)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:2163)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getFileStatus(S3AFileSystem.java:2102)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:702)
	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:899)
	at org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:86)
	at org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.<init>(HadoopFileLinesReader.scala:65)
	at org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$.readFile(CSVDataSource.scala:97)
	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$1(CSVFileFormat.scala:148)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:147)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:132)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:116)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:169)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:93)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.agg_doAggregateWithKeys_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:755)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:132)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)
	at org.apache.spark.scheduler.Task.run(Task.scala:131)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:497)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1439)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:500)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1819)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1403)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1372)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1145)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:802)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:770)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:744)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:704)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:686)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:550)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:530)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5445)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5392)
	at com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1367)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$4(S3AFileSystem.java:1249)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:322)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:285)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:1246)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2183)
	... 30 more

Driver stacktrace:
21/05/17 06:11:12 INFO DAGScheduler: Job 1 failed: csv at NativeMethodAccessorImpl.java:0, took 7.556433 s
21/05/17 06:11:12 ERROR FileFormatWriter: Aborting job 61e9ceda-83c2-4d73-b501-1099d374a96d.
org.apache.spark.SparkException: Job aborted due to stage failure: Task 1 in stage 1.0 failed 1 times, most recent failure: Lost task 1.0 in stage 1.0 (TID 2) (fb991e38a3b1 executor driver): java.nio.file.AccessDeniedException: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: getFileStatus on s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=:403 Forbidden
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:230)
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:151)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2198)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:2163)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getFileStatus(S3AFileSystem.java:2102)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:702)
	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:899)
	at org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:86)
	at org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.<init>(HadoopFileLinesReader.scala:65)
	at org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$.readFile(CSVDataSource.scala:97)
	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$1(CSVFileFormat.scala:148)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:147)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:132)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:116)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:169)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:93)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.agg_doAggregateWithKeys_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:755)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:132)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)
	at org.apache.spark.scheduler.Task.run(Task.scala:131)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:497)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1439)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:500)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1819)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1403)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1372)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1145)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:802)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:770)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:744)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:704)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:686)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:550)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:530)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5445)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5392)
	at com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1367)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$4(S3AFileSystem.java:1249)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:322)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:285)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:1246)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2183)
	... 30 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2253)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2202)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2201)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2201)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1078)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1078)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1078)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:2440)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2382)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2371)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:868)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2202)
	at org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:200)
	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:188)
	at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult$lzycompute(commands.scala:108)
	at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult(commands.scala:106)
	at org.apache.spark.sql.execution.command.DataWritingCommandExec.doExecute(commands.scala:131)
	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
	at org.apache.spark.rdd.RDDOperati
onScope$
.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
	at org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:132)
	at org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:131)
	at org.apache.spark.sql.DataFrameWriter.$anonfun$runCommand$1(DataFrameWriter.scala:989)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:103)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:163)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:90)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:772)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:989)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:438)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:415)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:293)
	at org.apache.spark.sql.DataFrameWriter.csv(DataFrameWriter.scala:979)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.GatewayConnection.run(GatewayConnection.java:238)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.nio.file.AccessDeniedException: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: getFileStatus on s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=:403 Forbidden
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:230)
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:151)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2198)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:2163)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getFileStatus(S3AFileSystem.java:2102)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:702)
	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:899)
	at org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:86)
	at org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.<init>(HadoopFileLinesReader.scala:65)
	at org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$.readFile(CSVDataSource.scala:97)
	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$1(CSVFileFormat.scala:148)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:147)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:132)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:116)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:169)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:93)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.agg_doAggregateWithKeys_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:755)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:132)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)
	at org.apache.spark.scheduler.Task.run(Task.scala:131)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:497)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1439)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:500)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	... 1 more
Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1819)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1403)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1372)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1145)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:802)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:770)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:744)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:704)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:686)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:550)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:530)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5445)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5392)
	at com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1367)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$4(S3AFileSystem.java:1249)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:322)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:285)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:1246)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2183)
	... 30 more
21/05/17 06:11:12 INFO AbstractS3ACommitter: Task committer attempt_202105170611047015042444317197751_0000_m_000000_0: aborting job (no job ID) in state FAILED
21/05/17 06:11:12 INFO StagingCommitter: Starting: Task committer attempt_202105170611047015042444317197751_0000_m_000000_0: aborting job in state (no job ID)
21/05/17 06:11:12 INFO AbstractS3ACommitter: Task committer attempt_202105170611047015042444317197751_0000_m_000000_0: no pending commits to abort
21/05/17 06:11:12 INFO StagingCommitter: Task committer attempt_202105170611047015042444317197751_0000_m_000000_0: aborting job in state (no job ID) : duration 0:00.012s
21/05/17 06:11:12 INFO Executor: Executor interrupted and killed task 2.0 in stage 1.0 (TID 3), reason: Stage cancelled
21/05/17 06:11:12 WARN TaskSetManager: Lost task 2.0 in stage 1.0 (TID 3) (fb991e38a3b1 executor driver): TaskKilled (Stage cancelled)
21/05/17 06:11:13 INFO Executor: Executor killed task 3.0 in stage 1.0 (TID 4), reason: Stage cancelled
21/05/17 06:11:13 WARN TaskSetManager: Lost task 3.0 in stage 1.0 (TID 4) (fb991e38a3b1 executor driver): TaskKilled (Stage cancelled)
21/05/17 06:11:13 INFO TaskSchedulerImpl: Removed TaskSet 1.0, whose tasks have all completed, from pool
21/05/17 06:11:13 INFO AbstractS3ACommitter: Starting: Cleanup job (no job ID)
21/05/17 06:11:13 INFO AbstractS3ACommitter: Starting: Aborting all pending commits under s3a://udac-forex-project/consolidated_data
21/05/17 06:11:13 INFO AbstractS3ACommitter: Aborting all pending commits under s3a://udac-forex-project/consolidated_data: duration 0:00.213s
21/05/17 06:11:13 INFO AbstractS3ACommitter: Cleanup job (no job ID): duration 0:00.213s
Traceback (most recent call last):
  File "/home/jovyan/spark.py", line 72, in <module>
    df \
  File "/usr/local/spark/python/pyspark/sql/readwriter.py", line 1371, in csv
self._jwrite.csv(path)
  File "/usr/local/spark/python/lib/py4j-0.10.9-src.zip/py4j/java_gateway.py", line 1304, in __call__
File "/usr/local/spark/python/pyspark/sql/utils.py", line 111, in deco
    return f(*a, **kw)
  File "/usr/local/spark/python/lib/py4j-0.10.9-src.zip/py4j/protocol.py", line 326, in get_return_value
py4j.protocol.Py4JJavaError
: An error occurred while calling o89.csv.
: org.apache.spark.SparkException: Job aborted.
	at org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:231)
	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:188)
	at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult$lzycompute(commands.scala:108)
	at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult(commands.scala:106)
	at org.apache.spark.sql.execution.command.DataWritingCommandExec.doExecute(commands.scala:131)
	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
	at org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:132)
	at org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:131)
	at org.apache.spark.sql.DataFrameWriter.$anonfun$runCommand$1(DataFrameWriter.scala:989)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:103)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:163)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:90)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:772)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:989)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:438)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:415)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:293)
	at org.apache.spark.sql.DataFrameWriter.csv(DataFrameWriter.scala:979)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.GatewayConnection.run(GatewayConnection.java:238)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.apache.spark.SparkException: Job aborted due to stage failure: Task 1 in stage 1.0 failed 1 times, most recent failure: Lost task 1.0 in stage 1.0 (TID 2) (fb991e38a3b1 executor driver): java.nio.file.AccessDeniedException: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: getFileStatus on s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=:403 Forbidden
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:230)
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:151)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2198)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:2163)
	at org.apache.hadoop.fs.s3
a.S3AFileSystem.getFileStatus(S3AFileSystem.java:2102)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:702)
	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:899)
	at org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:86)
	at org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.<init>(HadoopFileLinesReader.scala:65)
	at org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$.readFile(CSVDataSource.scala:97)
	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$1(CSVFileFormat.scala:148)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:147)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:132)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:116)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:169)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:93)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.agg_doAggregateWithKeys_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:755)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:132)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)
	at org.apache.spark.scheduler.Task.run(Task.scala:131)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:497)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1439)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:500)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1819)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1403)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1372)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1145)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:802)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:770)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:744)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:704)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:686)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:550)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:530)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5445)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5392)
	at com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1367)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$4(S3AFileSystem.java:1249)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:322)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:285)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:1246)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2183)
	... 30 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2253)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2202)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2201)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2201)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1078)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1078)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1078)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:2440)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2382)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2371)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:868)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2202)
	at org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:200)
	... 33 more
Caused by: java.nio.file.AccessDeniedException: s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: getFileStatus on s3a://udac-forex-project/2/2021-05-17_03_10_14/from_1621228214_to_1621230014.csv: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=:403 Forbidden
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:230)
	at org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:151)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2198)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:2163)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getFileStatus(S3AFileSystem.java:2102)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:702)
	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:899)
	at org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:86)
	at org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.<init>(HadoopFileLinesReader.scala:65)
	at org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$.readFile(CSVDataSource.scala:97)
	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$1(CSVFileFormat.scala:148)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:147)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:132)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$F
ileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:116)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:169)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:93)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.agg_doAggregateWithKeys_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:755)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:458)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:132)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)
	at org.apache.spark.scheduler.Task.run(Task.scala:131)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:497)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1439)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:500)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	... 1 more
Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: SAYEBQK64415DSK4; S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=; Proxy: null), S3 Extended Request ID: 3RHxK1rpjSzekYhs8mUFV88ZBoKGr0P6QKLRPc87r8herUNSHWDEdi+sFcPhn/lHnhm5X0ufoK8=
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1819)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1403)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1372)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1145)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:802)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:770)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:744)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:704)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:686)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:550)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:530)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5445)
	at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5392)
	at com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1367)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$4(S3AFileSystem.java:1249)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:322)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:285)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:1246)
	at org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:2183)
	... 30 more
21/05/17 06:11:15 INFO BlockManagerInfo: Removed broadcast_4_piece0 on fb991e38a3b1:35871 in memory (size: 12.0 KiB, free: 934.4 MiB)
21/05/17 06:11:15 INFO SparkContext: Invoking stop() from shutdown hook
21/05/17 06:11:15 INFO SparkUI: Stopped Spark web UI at http://fb991e38a3b1:4040
21/05/17 06:11:15 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!
21/05/17 06:11:15 INFO MemoryStore: MemoryStore cleared
21/05/17 06:11:15 INFO BlockManager: BlockManager stopped
21/05/17 06:11:15 INFO BlockManagerMaster: BlockManagerMaster stopped
21/05/17 06:11:15 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!
21/05/17 06:11:15 INFO SparkContext: Successfully stopped SparkContext
21/05/17 06:11:15 INFO ShutdownHookManager: Shutdown hook called
21/05/17 06:11:15 INFO ShutdownHookManager: Deleting directory /tmp/spark-83480827-7eb0-4479-a604-e9e7f8e5c699
21/05/17 06:11:15 INFO ShutdownHookManager: Deleting directory /tmp/spark-a985d331-2309-4264-9ca5-d055e52a97a6/pyspark-0d770c18-4631-421a-b925-557ad7f8274d
21/05/17 06:11:15 INFO ShutdownHookManager: Deleting directory /tmp/spark-a985d331-2309-4264-9ca5-d055e52a97a6
21/05/17 06:11:15 INFO MetricsSystemImpl: Stopping s3a-file-system metrics system...
21/05/17 06:11:15 INFO MetricsSystemImpl: s3a-file-system metrics system stopped.
21/05/17 06:11:15 INFO MetricsSystemImpl: s3a-file-system metrics system shutdown complete.
[2021-05-17 03:37:52,919] {taskinstance.py:1532} INFO - Marking task as FAILED. dag_id=etl, task_id=run_spark_job, execution_date=20210517T050000, start_date=20210517T061028, end_date=20210517T063752
[2021-05-17 03:37:52,939] {local_task_job.py:146} INFO - Task exited with return code 1
